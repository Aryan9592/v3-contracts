{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:507:8",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:8",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "76:117:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "86:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "101:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "95:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "95:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "86:5:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "171:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "180:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "183:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "173:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "173:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "173:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "130:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "141:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "156:3:8",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "161:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "152:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "152:11:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "165:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "148:19:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "137:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "137:31:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "127:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "127:42:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "120:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "120:50:8"
											},
											"nodeType": "YulIf",
											"src": "117:2:8"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "55:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "66:5:8",
										"type": ""
									}
								],
								"src": "14:179:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "296:209:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "342:26:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:8"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "359:6:8"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "344:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "344:22:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "344:22:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "317:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "326:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "313:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "313:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "338:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "309:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "309:32:8"
											},
											"nodeType": "YulIf",
											"src": "306:2:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "377:52:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "419:9:8"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "387:31:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "387:42:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "377:6:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "438:61:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "484:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "495:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "480:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "480:18:8"
													}
												],
												"functionName": {
													"name": "abi_decode_t_address_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "448:31:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "448:51:8"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "438:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_addresst_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "254:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "265:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "277:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "285:6:8",
										"type": ""
									}
								],
								"src": "198:307:8"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n}",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "610100604052613d0960e61b60c052614e2060e05234801561002057600080fd5b506040516107d03803806107d083398101604081905261003f91610079565b6001600160601b0319606092831b8116608052911b1660a0526100ab565b80516001600160a01b038116811461007457600080fd5b919050565b6000806040838503121561008b578182fd5b6100948361005d565b91506100a26020840161005d565b90509250929050565b60805160601c60a05160601c60c05160e01c60e0516106cf6101016000398061040052508061042e52508061019852806102d7528061033c528061047352508060ff52806102aa528061036c52506106cf6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636dd739441161005b5780636dd73944146100dd578063c551a2f9146100e5578063c9b185cc146100ed578063e9a0bae7146100f557610088565b80630846a5411461008d578063175db3c4146100ab5780631a88bc66146100c057806357d775f8146100d5575b600080fd5b6100956100fd565b6040516100a291906105a9565b60405180910390f35b6100b3610121565b6040516100a291906105d6565b6100c861013b565b6040516100a29190610690565b6100c8610141565b6100c8610147565b6100c861015f565b61009561033a565b6100c861035e565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600254421061013457506001610138565b5060005b90565b60005481565b60015481565b60006002544210156101345742600254039050610138565b6000610169610468565b6002544210156101945760405162461bcd60e51b815260040161018b906105e1565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e615a6b6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156101ef57600080fd5b505afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102279190610553565b505050509050806001541461026c576206978081108061024957506276a70081115b156102665760405162461bcd60e51b815260040161018b90610647565b60018190555b600061027661035e565b9050600154420160028190555061029060005460016104b2565b600055604051630f38ca0d60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906379c6506890610301907f00000000000000000000000000000000000000000000000000000000000000009085906004016105bd565b600060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b509294505050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061046261045861042c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c357600080fd5b505afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061053b565b6104277f00000000000000000000000000000000000000000000000000000000000000006001546104d4565b6104d4565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166104f3565b6301e133806104f3565b91505090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b05760405162461bcd60e51b815260040161018b90610610565b565b60008282018381108015906104c75750828110155b6104cd57fe5b9392505050565b60008282028315806104c75750828482816104eb57fe5b04146104cd57fe5b60008082116104fe57fe5b600082848161050957fe5b04905082848161051557fe5b068184020184146104cd57fe5b805163ffffffff8116811461053657600080fd5b919050565b60006020828403121561054c578081fd5b5051919050565b600080600080600060a0868803121561056a578081fd5b8551945061057a60208701610522565b93506040860151925061058f60608701610522565b915061059d60808701610522565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252601590820152742727aa2fa2a727aaa3a42faa24a6a2afa2a92927a960591b604082015260600190565b6020808252601e908201527f43414c4c45525f4e4f545f5354414b494e475f50524f58595f4552524f520000604082015260600190565b60208082526029908201527f5354414b494e475f45504f43485f54494d455f414e4f4d414c595f44455445436040820152682a22a22fa2a92927a960b91b606082015260800190565b9081526020019056fea2646970667358221220f0fa941e2dd9a3ac97a9942ffe4accc506451bcf3830c30eb20cfb41bd0e945664736f6c63430007040033",
			"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE PUSH2 0x3D09 PUSH1 0xE6 SHL PUSH1 0xC0 MSTORE PUSH2 0x4E20 PUSH1 0xE0 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7D0 CODESIZE SUB DUP1 PUSH2 0x7D0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3F SWAP2 PUSH2 0x79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP3 DUP4 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 SHL AND PUSH1 0xA0 MSTORE PUSH2 0xAB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x94 DUP4 PUSH2 0x5D JUMP JUMPDEST SWAP2 POP PUSH2 0xA2 PUSH1 0x20 DUP5 ADD PUSH2 0x5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE0 SHR PUSH1 0xE0 MLOAD PUSH2 0x6CF PUSH2 0x101 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x400 MSTORE POP DUP1 PUSH2 0x42E MSTORE POP DUP1 PUSH2 0x198 MSTORE DUP1 PUSH2 0x2D7 MSTORE DUP1 PUSH2 0x33C MSTORE DUP1 PUSH2 0x473 MSTORE POP DUP1 PUSH1 0xFF MSTORE DUP1 PUSH2 0x2AA MSTORE DUP1 PUSH2 0x36C MSTORE POP PUSH2 0x6CF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DD73944 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6DD73944 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xC551A2F9 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xC9B185CC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xE9A0BAE7 EQ PUSH2 0xF5 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x846A541 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x175DB3C4 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x1A88BC66 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x57D775F8 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x141 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x147 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x15F JUMP JUMPDEST PUSH2 0x95 PUSH2 0x33A JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x35E JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x134 JUMPI POP PUSH1 0x1 PUSH2 0x138 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x134 JUMPI TIMESTAMP PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH2 0x138 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5E615A6B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x203 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ PUSH2 0x26C JUMPI PUSH3 0x69780 DUP2 LT DUP1 PUSH2 0x249 JUMPI POP PUSH3 0x76A700 DUP2 GT JUMPDEST ISZERO PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x276 PUSH2 0x35E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD TIMESTAMP ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x290 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF38CA0D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x79C65068 SWAP1 PUSH2 0x301 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x462 PUSH2 0x458 PUSH2 0x42C PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x427 PUSH32 0x0 PUSH1 0x1 SLOAD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH2 0x4F3 JUMP JUMPDEST PUSH4 0x1E13380 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x610 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x4C7 JUMPI POP DUP3 DUP2 LT ISZERO JUMPDEST PUSH2 0x4CD JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x4C7 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x4EB JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4CD JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4FE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x509 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP3 DUP5 DUP2 PUSH2 0x515 JUMPI INVALID JUMPDEST MOD DUP2 DUP5 MUL ADD DUP5 EQ PUSH2 0x4CD JUMPI INVALID JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x56A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 MLOAD SWAP5 POP PUSH2 0x57A PUSH1 0x20 DUP8 ADD PUSH2 0x522 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH2 0x58F PUSH1 0x60 DUP8 ADD PUSH2 0x522 JUMP JUMPDEST SWAP2 POP PUSH2 0x59D PUSH1 0x80 DUP8 ADD PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x2727AA2FA2A727AAA3A42FAA24A6A2AFA2A92927A9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x43414C4C45525F4E4F545F5354414B494E475F50524F58595F4552524F520000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5354414B494E475F45504F43485F54494D455F414E4F4D414C595F4445544543 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2A22A22FA2A92927A9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE STATICCALL SWAP5 0x1E 0x2D 0xD9 LOG3 0xAC SWAP8 0xA9 SWAP5 0x2F INVALID 0x4A 0xCC 0xC5 MOD GASLIMIT SHL 0xCF CODESIZE ADDRESS 0xC3 0xE 0xB2 0xC 0xFB COINBASE 0xBD 0xE SWAP5 JUMP PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
			"sourceMap": "1129:3902:1:-:0;;;-1:-1:-1;;;1385:49:1;;1520:9;1385:49;1469:60;1683:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1784:38:1;;;;;;;;1832:44;;;;;1129:3902;;14:179:8;95:13;;-1:-1:-1;;;;;137:31:8;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;1129:3902:1;;;;;;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2881:8",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:8",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "75:108:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "85:22:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "100:6:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "94:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "94:13:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "85:5:8"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "161:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "170:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "173:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "163:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "163:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "163:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "129:5:8"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "140:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "147:10:8",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:22:8"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "126:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "126:33:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "119:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "119:41:8"
											},
											"nodeType": "YulIf",
											"src": "116:2:8"
										}
									]
								},
								"name": "abi_decode_t_uint32_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "54:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "65:5:8",
										"type": ""
									}
								],
								"src": "14:169:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "269:113:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "315:26:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:8"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "332:6:8"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "317:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "317:22:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "317:22:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "290:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "299:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "286:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "286:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "311:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "282:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "282:32:8"
											},
											"nodeType": "YulIf",
											"src": "279:2:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "350:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "366:9:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "360:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "360:16:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "350:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "235:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "246:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "258:6:8",
										"type": ""
									}
								],
								"src": "188:194:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "533:366:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "580:26:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:8"
																},
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "582:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "582:22:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "582:22:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "554:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "563:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "550:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "550:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "575:3:8",
														"type": "",
														"value": "160"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "546:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "546:33:8"
											},
											"nodeType": "YulIf",
											"src": "543:2:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "615:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "631:9:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "625:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "625:16:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "615:6:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "650:60:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "695:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "706:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "691:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "691:18:8"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint32_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "660:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "660:50:8"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "650:6:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "719:35:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "739:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "750:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "735:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "735:18:8"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "729:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "729:25:8"
											},
											"variableNames": [
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "719:6:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "763:60:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "808:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "819:2:8",
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "804:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "804:18:8"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint32_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "773:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "773:50:8"
											},
											"variableNames": [
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "763:6:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "832:61:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "877:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "888:3:8",
																"type": "",
																"value": "128"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "873:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "873:19:8"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint32_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "842:30:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "842:51:8"
											},
											"variableNames": [
												{
													"name": "value4",
													"nodeType": "YulIdentifier",
													"src": "832:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256t_uint32t_uint256t_uint32t_uint32_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "467:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "478:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "490:6:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "498:6:8",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "506:6:8",
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
										"src": "514:6:8",
										"type": ""
									},
									{
										"name": "value4",
										"nodeType": "YulTypedName",
										"src": "522:6:8",
										"type": ""
									}
								],
								"src": "387:512:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1005:102:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1015:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1027:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1038:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1023:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1023:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1015:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1057:9:8"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1072:6:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1088:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1093:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1084:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1084:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1080:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:19:8"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "1068:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1068:32:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1050:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1050:51:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1050:51:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "974:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "985:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "996:4:8",
										"type": ""
									}
								],
								"src": "904:203:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1241:145:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1251:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1263:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1274:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1259:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1259:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1251:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1293:9:8"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1308:6:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1324:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1316:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:19:8"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "1304:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1304:32:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1286:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1286:51:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1286:51:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1357:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1368:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1353:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1353:18:8"
													},
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "1373:6:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1346:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1346:34:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1346:34:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1202:9:8",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "1213:6:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1221:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1232:4:8",
										"type": ""
									}
								],
								"src": "1112:274:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1486:92:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1496:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1508:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1519:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1504:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1504:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1496:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1538:9:8"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:14:8"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "1549:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1549:22:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1531:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1531:41:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1531:41:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1455:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1466:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1477:4:8",
										"type": ""
									}
								],
								"src": "1391:187:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1757:171:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1774:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1785:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1767:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1767:21:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1767:21:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1808:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1819:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1804:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1804:18:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1824:2:8",
														"type": "",
														"value": "21"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1797:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1797:30:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1797:30:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1847:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1858:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1843:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1843:18:8"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "1863:23:8",
														"type": "",
														"value": "NOT_ENOUGH_TIME_ERROR"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1836:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1836:51:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1836:51:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1896:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1908:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1919:2:8",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1904:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1904:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1896:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_03d51df9c14cc8d9cd63cf0f9bd706d9709a721489386fe3d62214f85a188c08__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1734:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1748:4:8",
										"type": ""
									}
								],
								"src": "1583:345:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2107:180:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2124:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2135:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2117:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2117:21:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2117:21:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2158:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2169:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2154:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2154:18:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2174:2:8",
														"type": "",
														"value": "30"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2147:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2147:30:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2147:30:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2197:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2208:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2193:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2193:18:8"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "2213:32:8",
														"type": "",
														"value": "CALLER_NOT_STAKING_PROXY_ERROR"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2186:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2186:60:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2186:60:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2255:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2267:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2278:2:8",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2263:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2263:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2255:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_c77871824eadc5a8cde3e6350853c2b87764cf994bedd70d86462ca349bb7dea__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2084:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2098:4:8",
										"type": ""
									}
								],
								"src": "1933:354:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2466:231:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2483:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2494:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2476:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2476:21:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2476:21:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2517:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2528:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2513:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2513:18:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2533:2:8",
														"type": "",
														"value": "41"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2506:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2506:30:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2506:30:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2556:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2567:2:8",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2552:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2552:18:8"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "2572:34:8",
														"type": "",
														"value": "STAKING_EPOCH_TIME_ANOMALY_DETEC"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2545:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2545:62:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2545:62:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2627:9:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2638:2:8",
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2623:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2623:18:8"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "2643:11:8",
														"type": "",
														"value": "TED_ERROR"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2616:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2616:39:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2616:39:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2664:27:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2676:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2687:3:8",
														"type": "",
														"value": "128"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2672:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2672:19:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2664:4:8"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_e310256dbc0a2f1ddfe062cef92963cee98833de44f553ac533f407e0b3f10c0__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2443:9:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2457:4:8",
										"type": ""
									}
								],
								"src": "2292:405:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2803:76:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2813:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2825:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2836:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2821:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2821:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2813:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2855:9:8"
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2866:6:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2848:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2848:25:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2848:25:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2772:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2783:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2794:4:8",
										"type": ""
									}
								],
								"src": "2702:177:8"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_t_uint32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint32t_uint256t_uint32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := mload(headStart)\n        value1 := abi_decode_t_uint32_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_t_uint32_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint32_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_03d51df9c14cc8d9cd63cf0f9bd706d9709a721489386fe3d62214f85a188c08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"NOT_ENOUGH_TIME_ERROR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c77871824eadc5a8cde3e6350853c2b87764cf994bedd70d86462ca349bb7dea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"CALLER_NOT_STAKING_PROXY_ERROR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e310256dbc0a2f1ddfe062cef92963cee98833de44f553ac533f407e0b3f10c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"STAKING_EPOCH_TIME_ANOMALY_DETEC\")\n        mstore(add(headStart, 96), \"TED_ERROR\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {
				"175": [
					{
						"length": 32,
						"start": 255
					},
					{
						"length": 32,
						"start": 682
					},
					{
						"length": 32,
						"start": 876
					}
				],
				"178": [
					{
						"length": 32,
						"start": 408
					},
					{
						"length": 32,
						"start": 727
					},
					{
						"length": 32,
						"start": 828
					},
					{
						"length": 32,
						"start": 1139
					}
				],
				"189": [
					{
						"length": 32,
						"start": 1070
					}
				],
				"196": [
					{
						"length": 32,
						"start": 1024
					}
				]
			},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80636dd739441161005b5780636dd73944146100dd578063c551a2f9146100e5578063c9b185cc146100ed578063e9a0bae7146100f557610088565b80630846a5411461008d578063175db3c4146100ab5780631a88bc66146100c057806357d775f8146100d5575b600080fd5b6100956100fd565b6040516100a291906105a9565b60405180910390f35b6100b3610121565b6040516100a291906105d6565b6100c861013b565b6040516100a29190610690565b6100c8610141565b6100c8610147565b6100c861015f565b61009561033a565b6100c861035e565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600254421061013457506001610138565b5060005b90565b60005481565b60015481565b60006002544210156101345742600254039050610138565b6000610169610468565b6002544210156101945760405162461bcd60e51b815260040161018b906105e1565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635e615a6b6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156101ef57600080fd5b505afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102279190610553565b505050509050806001541461026c576206978081108061024957506276a70081115b156102665760405162461bcd60e51b815260040161018b90610647565b60018190555b600061027661035e565b9050600154420160028190555061029060005460016104b2565b600055604051630f38ca0d60e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906379c6506890610301907f00000000000000000000000000000000000000000000000000000000000000009085906004016105bd565b600060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b509294505050505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061046261045861042c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c357600080fd5b505afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061053b565b6104277f00000000000000000000000000000000000000000000000000000000000000006001546104d4565b6104d4565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166104f3565b6301e133806104f3565b91505090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b05760405162461bcd60e51b815260040161018b90610610565b565b60008282018381108015906104c75750828110155b6104cd57fe5b9392505050565b60008282028315806104c75750828482816104eb57fe5b04146104cd57fe5b60008082116104fe57fe5b600082848161050957fe5b04905082848161051557fe5b068184020184146104cd57fe5b805163ffffffff8116811461053657600080fd5b919050565b60006020828403121561054c578081fd5b5051919050565b600080600080600060a0868803121561056a578081fd5b8551945061057a60208701610522565b93506040860151925061058f60608701610522565b915061059d60808701610522565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252601590820152742727aa2fa2a727aaa3a42faa24a6a2afa2a92927a960591b604082015260600190565b6020808252601e908201527f43414c4c45525f4e4f545f5354414b494e475f50524f58595f4552524f520000604082015260600190565b60208082526029908201527f5354414b494e475f45504f43485f54494d455f414e4f4d414c595f44455445436040820152682a22a22fa2a92927a960b91b606082015260800190565b9081526020019056fea2646970667358221220f0fa941e2dd9a3ac97a9942ffe4accc506451bcf3830c30eb20cfb41bd0e945664736f6c63430007040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DD73944 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6DD73944 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xC551A2F9 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xC9B185CC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xE9A0BAE7 EQ PUSH2 0xF5 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x846A541 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x175DB3C4 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x1A88BC66 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x57D775F8 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x141 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x147 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x15F JUMP JUMPDEST PUSH2 0x95 PUSH2 0x33A JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x35E JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD TIMESTAMP LT PUSH2 0x134 JUMPI POP PUSH1 0x1 PUSH2 0x138 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x134 JUMPI TIMESTAMP PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH2 0x138 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5E615A6B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x203 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ PUSH2 0x26C JUMPI PUSH3 0x69780 DUP2 LT DUP1 PUSH2 0x249 JUMPI POP PUSH3 0x76A700 DUP2 GT JUMPDEST ISZERO PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x647 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x276 PUSH2 0x35E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD TIMESTAMP ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x290 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH4 0xF38CA0D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x79C65068 SWAP1 PUSH2 0x301 SWAP1 PUSH32 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x462 PUSH2 0x458 PUSH2 0x42C PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x427 PUSH32 0x0 PUSH1 0x1 SLOAD PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH2 0x4F3 JUMP JUMPDEST PUSH4 0x1E13380 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B SWAP1 PUSH2 0x610 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT DUP1 ISZERO SWAP1 PUSH2 0x4C7 JUMPI POP DUP3 DUP2 LT ISZERO JUMPDEST PUSH2 0x4CD JUMPI INVALID JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL DUP4 ISZERO DUP1 PUSH2 0x4C7 JUMPI POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x4EB JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4CD JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4FE JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x509 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP3 DUP5 DUP2 PUSH2 0x515 JUMPI INVALID JUMPDEST MOD DUP2 DUP5 MUL ADD DUP5 EQ PUSH2 0x4CD JUMPI INVALID JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x56A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 MLOAD SWAP5 POP PUSH2 0x57A PUSH1 0x20 DUP8 ADD PUSH2 0x522 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH2 0x58F PUSH1 0x60 DUP8 ADD PUSH2 0x522 JUMP JUMPDEST SWAP2 POP PUSH2 0x59D PUSH1 0x80 DUP8 ADD PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x2727AA2FA2A727AAA3A42FAA24A6A2AFA2A92927A9 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x43414C4C45525F4E4F545F5354414B494E475F50524F58595F4552524F520000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5354414B494E475F45504F43485F54494D455F414E4F4D414C595F4445544543 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2A22A22FA2A92927A9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE STATICCALL SWAP5 0x1E 0x2D 0xD9 LOG3 0xAC SWAP8 0xA9 SWAP5 0x2F INVALID 0x4A 0xCC 0xC5 MOD GASLIMIT SHL 0xCF CODESIZE ADDRESS 0xC3 0xE 0xB2 0xC 0xFB COINBASE 0xBD 0xE SWAP5 JUMP PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
			"sourceMap": "1129:3902:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3341:258;;;:::i;:::-;;;;;;;:::i;1309:28::-;;;:::i;:::-;;;;;;;:::i;1343:35::-;;;:::i;3688:343::-;;;:::i;2037:1159::-;;;:::i;1247:55::-;;;:::i;4137:593::-;;;:::i;1189:52::-;;;:::o;3341:258::-;3427:4;3524:12;;3505:15;:31;3501:91;;-1:-1:-1;3559:4:1;3552:11;;3501:91;-1:-1:-1;3587:5:1;3501:91;3341:258;:::o;1309:28::-;;;;:::o;1343:35::-;;;;:::o;3688:343::-;3782:7;3874:12;;3856:15;:30;3852:125;;;3925:15;3910:12;;:30;3902:39;;;;2037:1159;2138:23;1630:29;:27;:29::i;:::-;2253:12:::1;;2235:15;:30;2231:92;;;2281:31;;-1:-1:-1::0;;;2281:31:1::1;;;;;;;:::i;:::-;;;;;;;;2231:92;2334:30;2385:21;-1:-1:-1::0;;;;;2376:41:1::1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2333:86;;;;;;2511:22;2496:11;;:37;2492:299;;2578:6;2553:22;:31;:67;;;;2613:7;2588:22;:32;2553:67;2549:232;;;2640:51;;-1:-1:-1::0;;;2640:51:1::1;;;;;;;:::i;2549:232::-;2730:11;:36:::0;;;2549:232:::1;2801:22;2826:19;:17;:19::i;:::-;2801:44;;2943:11;;2925:15;:29;2910:12;:44;;;;2971:16;2979:4;;2985:1;2971:7;:16::i;:::-;2964:4;:23:::0;3022:116:::1;::::0;-1:-1:-1;;;3022:116:1;;-1:-1:-1;;;;;3036:18:1::1;3022:43;::::0;::::1;::::0;:116:::1;::::0;3079:21:::1;::::0;3114:14;;3022:116:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3174:14:1;;-1:-1:-1;;;;;2037:1159:1;:::o;1247:55::-;;;:::o;4137:593::-;4228:7;4251:22;4289:402;4314:337;4343:253;4390:18;-1:-1:-1;;;;;4376:45:1;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4449:125;4486:21;4537:11;;4449:7;:125::i;:::-;4343:7;:253::i;:::-;4618:15;4314:337;;:7;:337::i;:::-;4669:8;4289:7;:402::i;:::-;4251:440;-1:-1:-1;;4137:593:1;:::o;4834:195::-;4921:10;-1:-1:-1;;;;;4935:21:1;4921:35;;4917:106;;4972:40;;-1:-1:-1;;;4972:40:1;;;;;;;:::i;4917:106::-;4834:195::o;544:153:7:-;606:7;637:5;;;659:4;;;;;;:12;;;670:1;667;:4;;659:12;652:20;;;;689:1;544:153;-1:-1:-1;;;544:153:7:o;59:161::-;121:7;152:5;;;174:6;;;:20;;;193:1;188;184;:5;;;;;;:10;167:28;;;226:182;288:7;318:1;314;:5;307:13;;;;330:9;346:1;342;:5;;;;;;330:17;;381:1;377;:5;;;;;;373:1;369;:5;:13;364:1;:18;357:26;;;14:169:8;94:13;;147:10;136:22;;126:33;;116:2;;173:1;170;163:12;116:2;75:108;;;:::o;188:194::-;;311:2;299:9;290:7;286:23;282:32;279:2;;;332:6;324;317:22;279:2;-1:-1:-1;360:16:8;;269:113;-1:-1:-1;269:113:8:o;387:512::-;;;;;;575:3;563:9;554:7;550:23;546:33;543:2;;;597:6;589;582:22;543:2;631:9;625:16;615:26;;660:50;706:2;695:9;691:18;660:50;:::i;:::-;650:60;;750:2;739:9;735:18;729:25;719:35;;773:50;819:2;808:9;804:18;773:50;:::i;:::-;763:60;;842:51;888:3;877:9;873:19;842:51;:::i;:::-;832:61;;533:366;;;;;;;;:::o;904:203::-;-1:-1:-1;;;;;1068:32:8;;;;1050:51;;1038:2;1023:18;;1005:102::o;1112:274::-;-1:-1:-1;;;;;1304:32:8;;;;1286:51;;1368:2;1353:18;;1346:34;1274:2;1259:18;;1241:145::o;1391:187::-;1556:14;;1549:22;1531:41;;1519:2;1504:18;;1486:92::o;1583:345::-;1785:2;1767:21;;;1824:2;1804:18;;;1797:30;-1:-1:-1;;;1858:2:8;1843:18;;1836:51;1919:2;1904:18;;1757:171::o;1933:354::-;2135:2;2117:21;;;2174:2;2154:18;;;2147:30;2213:32;2208:2;2193:18;;2186:60;2278:2;2263:18;;2107:180::o;2292:405::-;2494:2;2476:21;;;2533:2;2513:18;;;2506:30;2572:34;2567:2;2552:18;;2545:62;-1:-1:-1;;;2638:2:8;2623:18;;2616:39;2687:3;2672:19;;2466:231::o;2702:177::-;2848:25;;;2836:2;2821:18;;2803:76::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "348600",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"RIGO_TOKEN_ADDRESS()": "infinite",
				"STAKING_PROXY_ADDRESS()": "infinite",
				"epochEnded()": "1095",
				"epochLength()": "1095",
				"getEpochInflation()": "infinite",
				"mintInflation()": "infinite",
				"slot()": "1073",
				"timeUntilNextClaim()": "1877"
			},
			"internal": {
				"_assertCallerIsStakingProxy()": "infinite"
			}
		},
		"methodIdentifiers": {
			"RIGO_TOKEN_ADDRESS()": "0846a541",
			"STAKING_PROXY_ADDRESS()": "c9b185cc",
			"epochEnded()": "175db3c4",
			"epochLength()": "57d775f8",
			"getEpochInflation()": "e9a0bae7",
			"mintInflation()": "c551a2f9",
			"slot()": "1a88bc66",
			"timeUntilNextClaim()": "6dd73944"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_rigoTokenAddress",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_stakingProxyAddress",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "RIGO_TOKEN_ADDRESS",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "STAKING_PROXY_ADDRESS",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "epochEnded",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "epochLength",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getEpochInflation",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "mintInflation",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "mintedInflation",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "slot",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "timeUntilNextClaim",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}