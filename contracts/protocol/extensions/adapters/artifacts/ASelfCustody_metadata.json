{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "grgTokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "poolGRGminimumSatisfied",
				"outputs": [
					{
						"internalType": "bool",
						"name": "satisfied",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "shortfall",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "selfCustodyAccount",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferToSelfCustody",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Gabriele Rigo - <gab@rigoblock.com>",
			"kind": "dev",
			"methods": {
				"poolGRGminimumSatisfied(address,address,uint256)": {
					"details": "external check if minimum pool GRG amount requirement satisfied.",
					"params": {
						"amount": "Number of tokens to be transferred.",
						"grgTokenAddress": "Address of the Rigo token.",
						"tokenAddress": "Address of the token to be transferred."
					},
					"returns": {
						"satisfied": "Bool the transaction was successful.",
						"shortfall": "Number of GRG pool operator shortfall."
					}
				},
				"transferToSelfCustody(address,address,uint256)": {
					"details": "transfers ETH or tokens to self custody.",
					"params": {
						"amount": "Number of tokens.",
						"selfCustodyAccount": "Address of the target account.",
						"token": "Address of the target token."
					},
					"returns": {
						"_0": "Bool the transaction was successful.",
						"_1": "Number of GRG pool operator shortfall."
					}
				}
			},
			"title": "Self Custody adapter - A helper contract for self custody.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"poolGRGminimumSatisfied(address,address,uint256)": {
					"notice": "built around powers of pi number."
				},
				"transferToSelfCustody(address,address,uint256)": {
					"notice": "Transfeer of tokens excluded from GRG requirement for now."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/protocol/extensions/adapters/ASelfCustody.sol": "ASelfCustody"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/protocol/extensions/adapters/ASelfCustody.sol": {
			"keccak256": "0x19fb6b2595255d04c82d58fd7de3dd25b2d5b0e2c9d056cdca289ef7904b91e0",
			"urls": [
				"bzz-raw://c8def1d395ef264440dbf301cd7508329dbb82a792f1e0f10fbbcc60c58d6d68",
				"dweb:/ipfs/QmUcTVB5BjGYog5cvPjuRye8joqyTCvpEoifLKvP6rg95G"
			]
		}
	},
	"version": 1
}