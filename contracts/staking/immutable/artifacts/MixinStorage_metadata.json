{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "addAuthorizedAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "aggregatedStatsByEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "rewardsAvailable",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "numPoolsToFinalize",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalFeesCollected",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalWeightedStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalRewardsFinalized",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "authorities",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "authorized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cobbDouglasAlphaDenominator",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "cobbDouglasAlphaNumerator",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentEpochStartTimeInSeconds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "epochDurationInSeconds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAuthorizedAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "grgReservedForPoolRewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumPoolStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "poolIdByRbPoolAccount",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "poolStatsByEpoch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "feesCollected",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "weightedStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "membersStake",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "removeAuthorizedAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "removeAuthorizedAddressAtIndex",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rewardDelegatedStakeWeight",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "rewardsByPoolId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakingContract",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "validPops",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addAuthorizedAddress(address)": {
					"details": "Authorizes an address.",
					"params": {
						"target": "Address to authorize."
					}
				},
				"getAuthorizedAddresses()": {
					"details": "Gets all authorized addresses.",
					"returns": {
						"_0": "Array of authorized addresses."
					}
				},
				"removeAuthorizedAddress(address)": {
					"details": "Removes authorizion of an address.",
					"params": {
						"target": "Address to remove authorization from."
					}
				},
				"removeAuthorizedAddressAtIndex(address,uint256)": {
					"details": "Removes authorizion of an address.",
					"params": {
						"index": "Index of target in authorities array.",
						"target": "Address to remove authorization from."
					}
				},
				"transferOwnership(address)": {
					"details": "Change the owner of this contract.",
					"params": {
						"newOwner": "New owner address."
					}
				}
			},
			"stateVariables": {
				"aggregatedStatsByEpoch": {
					"details": "Aggregated stats across all pools that generated fees with sufficient stake to earn rewards.      See `_minimumPoolStake` in MixinParams.0 Epoch number.",
					"return": "0 Reward computation stats."
				},
				"grgReservedForPoolRewards": {
					"details": "The GRG balance of this contract that is reserved for pool reward payouts."
				},
				"poolIdByRbPoolAccount": {
					"details": "Mapping from RigoBlock pool subaccount to pool Id of rigoblock pool0 RigoBlock pool subaccount address.",
					"return": "0 The pool ID."
				},
				"poolStatsByEpoch": {
					"details": "Stats for each pool that generated fees with sufficient stake to earn rewards.      See `_minimumPoolStake` in `MixinParams`.0 Pool ID.1 Epoch number.",
					"return": "0 Pool fee stats."
				},
				"rewardsByPoolId": {
					"details": "mapping from pool ID to reward balance of members0 Pool ID.",
					"return": "0 The total reward balance of members in this pool."
				},
				"validPops": {
					"details": "Registered RigoBlock Proof_of_Performance contracts, capable of paying protocol fees.0 The address to check.",
					"return": "0 Whether the address is a registered proof_of_performance."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/staking/immutable/MixinStorage.sol": "MixinStorage"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/staking/immutable/MixinConstants.sol": {
			"keccak256": "0xd133fd2262134f233f569d2d818f4816c936a57d4749eaa3e39b024117beb2e9",
			"urls": [
				"bzz-raw://248bbe0ccfe971cea5e62f71b54a4cb587e3a873a9b583646156ccfb79c4a29f",
				"dweb:/ipfs/QmWu2ohc6tFKzay1ZTnFugmzLhJhTB9wqvTgiTEdcVVkNz"
			]
		},
		"localhost/staking/immutable/MixinStorage.sol": {
			"keccak256": "0x1afc1f20c80bf2f79bac69748476f2242ff0bb715187e8b37d21fd7718713cfd",
			"urls": [
				"bzz-raw://6d39d33475a70f3236cae25f2ffdef8a990b1fa156485d9144e1b08a6cc942b4",
				"dweb:/ipfs/QmSZzhGM2PZ19UdMCcwMCWxKCNyw9Se2qMn8BXmYUtLrCa"
			]
		},
		"localhost/staking/interfaces/IGrgVault.sol": {
			"keccak256": "0xed5ec7fce9f9acd1505143f58294013739e966d6763394445b469b57c8400d2e",
			"urls": [
				"bzz-raw://bc5de5fd786789cf52da56e4001b22a1d7d39e8e0f9e54c2423c20090798ad16",
				"dweb:/ipfs/QmVz4Wv9576PhPKNq3a7fFSaDpienBYczwZc9fgHeusy8m"
			]
		},
		"localhost/staking/interfaces/IStructs.sol": {
			"keccak256": "0x10c400a91961455ca5ea5fed8e60b320b1fdf7903dcdc5fe8a7cb8714cd67b3d",
			"urls": [
				"bzz-raw://b9aa6fbb76c818a8f75a8ebb44850a7093885fa2132f0539d28008555766ddbd",
				"dweb:/ipfs/QmSZcmRbdn7mHGEG3fm2oAnBK5occLFqg9TyZWiufqobWy"
			]
		},
		"localhost/staking/libs/LibStakingRichErrors.sol": {
			"keccak256": "0xa460e858869ff0915eceb9421f646f57475c7ca6960163af3bb875b230422e40",
			"urls": [
				"bzz-raw://ee3327da0d1208ae41968d7da1697564974193974898064bde8135187b760eb0",
				"dweb:/ipfs/QmVANkJumvZFpso47ovD9N9AdWyQt2kbquTH3s8cgaWDmF"
			]
		},
		"localhost/utils/0xUtils/Authorizable.sol": {
			"keccak256": "0x37dbac32c5cfbcdb88b062bc88efff950461a48c520b4be2a60aa369ad73d74e",
			"urls": [
				"bzz-raw://f0f1eaae3e03079d9e39c876d871176714b65dd68e8f092428839d0547e32692",
				"dweb:/ipfs/QmUMgGwGVaDA5TtVUM56rotdGj8MXixwkEWXj674d9BvUq"
			]
		},
		"localhost/utils/0xUtils/LibAuthorizableRichErrors.sol": {
			"keccak256": "0xb1880ffad192f6756fa0cfced02ca2b22385f6fbd273a40d27476e57b57bdcb1",
			"urls": [
				"bzz-raw://2ae53359a77e208c68a524a463b95626c7d5ae29d51c8cd102776184babb0521",
				"dweb:/ipfs/QmWUQCf61EvWuM6CmGLe9ohJi6eDscNGrHA8MEFFGcvESp"
			]
		},
		"localhost/utils/0xUtils/LibOwnableRichErrors.sol": {
			"keccak256": "0x016064761c548df3f567781c30ecb57bcc1cd3c3e8387dc7f7a9d14115134696",
			"urls": [
				"bzz-raw://cb7e9e5228c3b815c06a7a1b524502e6e99fed098b46c6acfa4a9300f422ce85",
				"dweb:/ipfs/QmWgvq9Dn3W4aHLz54qgf16n8htK5sqmGB8fgkrEEWgBKY"
			]
		},
		"localhost/utils/0xUtils/LibRichErrors.sol": {
			"keccak256": "0xc70446f21236f9c76bc769e36ea5027a1b96db6ebc1d730ef7f6fcebf266fb23",
			"urls": [
				"bzz-raw://57c5926a88098e902099c5e8b6eea51110e120b6442d2003f8fdbca1d2ec44df",
				"dweb:/ipfs/QmQhTpubqBKUpC63rZvmwfECq6szYgZTSDrvnuH7TxVgv1"
			]
		},
		"localhost/utils/0xUtils/Ownable.sol": {
			"keccak256": "0x02a5fbbc96740e2cd1d4b797e0e91bb6473454e8e77491b168f883e502eea293",
			"urls": [
				"bzz-raw://5cbae647644e8c1a09286160ae39a8b19e9b48a89f928bc6d958a2dc573d731b",
				"dweb:/ipfs/QmWsavUC8uawTAegy8jWWm1qbVp9SxFMNRGKMRCcAuZGcZ"
			]
		},
		"localhost/utils/0xUtils/interfaces/IAuthorizable.sol": {
			"keccak256": "0xd89fb9d873e84217bbe23cfb14984bd6615968f9821b9a06912c76c0614393d6",
			"urls": [
				"bzz-raw://e8b6764751e9a8b148831a7de16f96bb020707ddaa77bb15afc7aca959cba4ea",
				"dweb:/ipfs/QmdQxgwaCCQXk3DvSZsAFt7igZz2eusRUjVMdfYYEn56nM"
			]
		},
		"localhost/utils/0xUtils/interfaces/IOwnable.sol": {
			"keccak256": "0x68e4024f6f30d730b1de10bbbdf5c7753245fc9dc5a80dd0a1215df308b889e2",
			"urls": [
				"bzz-raw://0548cbffa6f0c77c505440e3bed8bf0518668876d1d733ef7bec25e9beba9d43",
				"dweb:/ipfs/Qmf62pKVYV5ygsu1QzRwixMgQsxnKBbCf1rgVZcJ2CySE6"
			]
		}
	},
	"version": 1
}