{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_grgProxyAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_grgTokenAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "AuthorizedAddressRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "grgProxyAddress",
						"type": "address"
					}
				],
				"name": "GrgProxySet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "InCatastrophicFailureMode",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "stakingProxyAddress",
						"type": "address"
					}
				],
				"name": "StakingProxySet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "addAuthorizedAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "authorities",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "authorized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "staker",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "balanceOfGrgVault",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "depositFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "enterCatastrophicFailure",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAuthorizedAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "grgAssetProxy",
				"outputs": [
					{
						"internalType": "contract IAssetProxy",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isInCatastrophicFailure",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "removeAuthorizedAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "removeAuthorizedAddressAtIndex",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_grgProxyAddress",
						"type": "address"
					}
				],
				"name": "setGrgProxy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_stakingProxyAddress",
						"type": "address"
					}
				],
				"name": "setStakingProxy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stakingProxyAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "staker",
						"type": "address"
					}
				],
				"name": "withdrawAllFrom",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addAuthorizedAddress(address)": {
					"details": "Authorizes an address.",
					"params": {
						"target": "Address to authorize."
					}
				},
				"balanceOf(address)": {
					"details": "Returns the balance in Grg Tokens of the `staker`",
					"returns": {
						"_0": "Balance in Grg."
					}
				},
				"balanceOfGrgVault()": {
					"details": "Returns the entire balance of Grg tokens in the vault."
				},
				"constructor": {
					"details": "Constructor.",
					"params": {
						"_grgProxyAddress": "Address of the RigoBlock Grg Proxy.",
						"_grgTokenAddress": "Address of the Grg Token."
					}
				},
				"depositFrom(address,uint256)": {
					"details": "Deposit an `amount` of Grg Tokens from `staker` into the vault. Note that only the Staking contract can call this. Note that this can only be called when *not* in Catastrophic Failure mode.",
					"params": {
						"amount": "of Grg Tokens to deposit.",
						"staker": "of Grg Tokens."
					}
				},
				"enterCatastrophicFailure()": {
					"details": "Vault enters into Catastrophic Failure Mode. *** WARNING - ONCE IN CATOSTROPHIC FAILURE MODE, YOU CAN NEVER GO BACK! *** Note that only the contract owner can call this function."
				},
				"getAuthorizedAddresses()": {
					"details": "Gets all authorized addresses.",
					"returns": {
						"_0": "Array of authorized addresses."
					}
				},
				"removeAuthorizedAddress(address)": {
					"details": "Removes authorizion of an address.",
					"params": {
						"target": "Address to remove authorization from."
					}
				},
				"removeAuthorizedAddressAtIndex(address,uint256)": {
					"details": "Removes authorizion of an address.",
					"params": {
						"index": "Index of target in authorities array.",
						"target": "Address to remove authorization from."
					}
				},
				"setGrgProxy(address)": {
					"details": "Sets the Grg proxy. Note that only an authorized address can call this function. Note that this can only be called when *not* in Catastrophic Failure mode.",
					"params": {
						"_grgProxyAddress": "Address of the RigoBlock Grg Proxy."
					}
				},
				"setStakingProxy(address)": {
					"details": "Sets the address of the StakingProxy contract. Note that only the contract owner can call this function.",
					"params": {
						"_stakingProxyAddress": "Address of Staking proxy contract."
					}
				},
				"transferOwnership(address)": {
					"details": "Change the owner of this contract.",
					"params": {
						"newOwner": "New owner address."
					}
				},
				"withdrawAllFrom(address)": {
					"details": "Withdraw ALL Grg Tokens to `staker` from the vault. Note that this can only be called when *in* Catastrophic Failure mode.",
					"params": {
						"staker": "of Grg Tokens."
					}
				},
				"withdrawFrom(address,uint256)": {
					"details": "Withdraw an `amount` of Grg Tokens to `staker` from the vault. Note that only the Staking contract can call this. Note that this can only be called when *not* in Catastrophic Failure mode.",
					"params": {
						"amount": "of Grg Tokens to withdraw.",
						"staker": "of Grg Tokens."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/staking/GrgVault.sol": "GrgVault"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/staking/GrgVault.sol": {
			"keccak256": "0xb0f346a7acb2451521366466850dc5437a5a663ae0bbb9bb84c777495e4e45c8",
			"license": "Apache 2.0",
			"urls": [
				"bzz-raw://39077c3beae70f547ecc2fc9efaeb595b0b6b262650cbb91121a1e05bb94e4f5",
				"dweb:/ipfs/QmYSnpePMJvCW65xQtu27HRdfXno7DgVPYpe6djpYdemMy"
			]
		},
		"localhost/staking/interfaces/IGrgVault.sol": {
			"keccak256": "0xed5ec7fce9f9acd1505143f58294013739e966d6763394445b469b57c8400d2e",
			"urls": [
				"bzz-raw://bc5de5fd786789cf52da56e4001b22a1d7d39e8e0f9e54c2423c20090798ad16",
				"dweb:/ipfs/QmVz4Wv9576PhPKNq3a7fFSaDpienBYczwZc9fgHeusy8m"
			]
		},
		"localhost/staking/interfaces/IStructs.sol": {
			"keccak256": "0x10c400a91961455ca5ea5fed8e60b320b1fdf7903dcdc5fe8a7cb8714cd67b3d",
			"urls": [
				"bzz-raw://b9aa6fbb76c818a8f75a8ebb44850a7093885fa2132f0539d28008555766ddbd",
				"dweb:/ipfs/QmSZcmRbdn7mHGEG3fm2oAnBK5occLFqg9TyZWiufqobWy"
			]
		},
		"localhost/staking/libs/LibStakingRichErrors.sol": {
			"keccak256": "0xa460e858869ff0915eceb9421f646f57475c7ca6960163af3bb875b230422e40",
			"urls": [
				"bzz-raw://ee3327da0d1208ae41968d7da1697564974193974898064bde8135187b760eb0",
				"dweb:/ipfs/QmVANkJumvZFpso47ovD9N9AdWyQt2kbquTH3s8cgaWDmF"
			]
		},
		"localhost/utils/0xUtils/Authorizable.sol": {
			"keccak256": "0x37dbac32c5cfbcdb88b062bc88efff950461a48c520b4be2a60aa369ad73d74e",
			"urls": [
				"bzz-raw://f0f1eaae3e03079d9e39c876d871176714b65dd68e8f092428839d0547e32692",
				"dweb:/ipfs/QmUMgGwGVaDA5TtVUM56rotdGj8MXixwkEWXj674d9BvUq"
			]
		},
		"localhost/utils/0xUtils/IAssetData.sol": {
			"keccak256": "0x8bb458d8217a292ffcfeac1d986f6711264a9b563b2bbef7c01faede6299386c",
			"urls": [
				"bzz-raw://cdfb529ebb5f090f738f49dd115036ca38cacc9ecabd1958ca893897aadc42dd",
				"dweb:/ipfs/Qmehuc5shRD8jamTouKxrTBjJPvZpj8an9ygDxvYMCLPv3"
			]
		},
		"localhost/utils/0xUtils/IAssetProxy.sol": {
			"keccak256": "0x67c97de1161c44b86ea60779d2dc397bfabf50e67c880ca39c0a162ee9e6aed3",
			"urls": [
				"bzz-raw://0f70825ea5da54e999b79b4b764200de7911c5992f450b8b1238779e96e43e48",
				"dweb:/ipfs/QmXqHJdoordKXYWzMTyEA3f5Xjyt56krwvkYViFLAoqCqd"
			]
		},
		"localhost/utils/0xUtils/IERC20Token.sol": {
			"keccak256": "0xa6c94ce23e0e1de6488050761a7be629c32d152241e892d36fef3101f549b60d",
			"urls": [
				"bzz-raw://b6cc2ed4d6201b50bcca2778ad7defd9d37f65df1efb402d52c75968191342d2",
				"dweb:/ipfs/QmQYas7SDamGNmy3knLXLM3wTmkpq5cQbXXD8yYfQYBHUC"
			]
		},
		"localhost/utils/0xUtils/LibAuthorizableRichErrors.sol": {
			"keccak256": "0xb1880ffad192f6756fa0cfced02ca2b22385f6fbd273a40d27476e57b57bdcb1",
			"urls": [
				"bzz-raw://2ae53359a77e208c68a524a463b95626c7d5ae29d51c8cd102776184babb0521",
				"dweb:/ipfs/QmWUQCf61EvWuM6CmGLe9ohJi6eDscNGrHA8MEFFGcvESp"
			]
		},
		"localhost/utils/0xUtils/LibOwnableRichErrors.sol": {
			"keccak256": "0x016064761c548df3f567781c30ecb57bcc1cd3c3e8387dc7f7a9d14115134696",
			"urls": [
				"bzz-raw://cb7e9e5228c3b815c06a7a1b524502e6e99fed098b46c6acfa4a9300f422ce85",
				"dweb:/ipfs/QmWgvq9Dn3W4aHLz54qgf16n8htK5sqmGB8fgkrEEWgBKY"
			]
		},
		"localhost/utils/0xUtils/LibRichErrors.sol": {
			"keccak256": "0xc70446f21236f9c76bc769e36ea5027a1b96db6ebc1d730ef7f6fcebf266fb23",
			"urls": [
				"bzz-raw://57c5926a88098e902099c5e8b6eea51110e120b6442d2003f8fdbca1d2ec44df",
				"dweb:/ipfs/QmQhTpubqBKUpC63rZvmwfECq6szYgZTSDrvnuH7TxVgv1"
			]
		},
		"localhost/utils/0xUtils/LibSafeMath.sol": {
			"keccak256": "0xd0e19089e0a1669023466c29551fbaa6586885dfefb8793ac7beba59ef9e6554",
			"urls": [
				"bzz-raw://b62ec6b8c52285747567d1bcf8261138aac9e5f9deeb0d2a466f2515e3b66433",
				"dweb:/ipfs/QmRV8mE4EqcA79si2Rf8bCsLB5fmcmx8QMyYdKAWooP1j3"
			]
		},
		"localhost/utils/0xUtils/LibSafeMathRichErrors.sol": {
			"keccak256": "0xc963d193a9472325a179a20b1b1fe3cad0e249f5e97c58269c6c2a4a18c70e07",
			"urls": [
				"bzz-raw://31043f6258ac57c7832160f08359aa2173fa0bcad691929a06dd446917f24012",
				"dweb:/ipfs/QmXzeTVTXkZAUjuX4c8vbGpu76CcJbjaqW37v6SZ9jiktF"
			]
		},
		"localhost/utils/0xUtils/Ownable.sol": {
			"keccak256": "0x02a5fbbc96740e2cd1d4b797e0e91bb6473454e8e77491b168f883e502eea293",
			"urls": [
				"bzz-raw://5cbae647644e8c1a09286160ae39a8b19e9b48a89f928bc6d958a2dc573d731b",
				"dweb:/ipfs/QmWsavUC8uawTAegy8jWWm1qbVp9SxFMNRGKMRCcAuZGcZ"
			]
		},
		"localhost/utils/0xUtils/interfaces/IAuthorizable.sol": {
			"keccak256": "0xd89fb9d873e84217bbe23cfb14984bd6615968f9821b9a06912c76c0614393d6",
			"urls": [
				"bzz-raw://e8b6764751e9a8b148831a7de16f96bb020707ddaa77bb15afc7aca959cba4ea",
				"dweb:/ipfs/QmdQxgwaCCQXk3DvSZsAFt7igZz2eusRUjVMdfYYEn56nM"
			]
		},
		"localhost/utils/0xUtils/interfaces/IOwnable.sol": {
			"keccak256": "0x68e4024f6f30d730b1de10bbbdf5c7753245fc9dc5a80dd0a1215df308b889e2",
			"urls": [
				"bzz-raw://0548cbffa6f0c77c505440e3bed8bf0518668876d1d733ef7bec25e9beba9d43",
				"dweb:/ipfs/Qmf62pKVYV5ygsu1QzRwixMgQsxnKBbCf1rgVZcJ2CySE6"
			]
		}
	},
	"version": 1
}