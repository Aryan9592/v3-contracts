{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"deployedBytecode": {
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"gasEstimates": null,
		"methodIdentifiers": {
			"addPopAddress(address)": "1f81eb80",
			"computeRewardBalanceOfDelegator(bytes32,address)": "e907f003",
			"computeRewardBalanceOfOperator(bytes32)": "bb7ef7e0",
			"createStakingPool(address)": "be111af4",
			"creditPopReward(address,uint256)": "ecc128f2",
			"decreaseStakingPoolOperatorShare(bytes32,uint32)": "5d91121d",
			"endEpoch()": "0b9663db",
			"finalizePool(bytes32)": "ff691b11",
			"getCurrentEpochEarliestEndTimeInSeconds()": "b2baa33e",
			"getDragoRegistry()": "b652b41f",
			"getGlobalStakeByStatus(uint8)": "e804d0a4",
			"getGrgContract()": "ef4ba680",
			"getGrgVault()": "e0822db7",
			"getOwnerStakeByStatus(address,uint8)": "44a6958b",
			"getParams()": "5e615a6b",
			"getStakeDelegatedToPoolByOwner(address,bytes32)": "f252b7a1",
			"getStakingPool(bytes32)": "4bcc3f67",
			"getStakingPoolStatsThisEpoch(bytes32)": "46b97959",
			"getTotalStake(address)": "1e7ff8f6",
			"getTotalStakeDelegatedToPool(bytes32)": "3e4ad732",
			"init()": "e1c7392a",
			"joinStakingPoolAsRbPoolAccount(bytes32,address)": "1a67a0a0",
			"moveStake((uint8,bytes32),(uint8,bytes32),uint256)": "58f6c7e3",
			"removePopAddress(address)": "36d7dd8e",
			"setParams(uint256,uint32,uint256,uint32,uint32)": "9c3ccc82",
			"setStakingPalAddress(bytes32,address)": "3a832382",
			"stake(uint256)": "a694fc3a",
			"unstake(uint256)": "2e17de78",
			"withdrawDelegatorRewards(bytes32)": "b510879f"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "addr",
					"type": "address"
				}
			],
			"name": "addPopAddress",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "member",
					"type": "address"
				}
			],
			"name": "computeRewardBalanceOfDelegator",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "reward",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "computeRewardBalanceOfOperator",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "reward",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "rigoblockPoolAddress",
					"type": "address"
				}
			],
			"name": "createStakingPool",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "poolAccount",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "popReward",
					"type": "uint256"
				}
			],
			"name": "creditPopReward",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				},
				{
					"internalType": "uint32",
					"name": "newOperatorShare",
					"type": "uint32"
				}
			],
			"name": "decreaseStakingPoolOperatorShare",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "endEpoch",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "finalizePool",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getCurrentEpochEarliestEndTimeInSeconds",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getDragoRegistry",
			"outputs": [
				{
					"internalType": "contract IDragoRegistry",
					"name": "dragoRegistry",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "enum IStructs.StakeStatus",
					"name": "stakeStatus",
					"type": "uint8"
				}
			],
			"name": "getGlobalStakeByStatus",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint64",
							"name": "currentEpoch",
							"type": "uint64"
						},
						{
							"internalType": "uint96",
							"name": "currentEpochBalance",
							"type": "uint96"
						},
						{
							"internalType": "uint96",
							"name": "nextEpochBalance",
							"type": "uint96"
						}
					],
					"internalType": "struct IStructs.StoredBalance",
					"name": "balance",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getGrgContract",
			"outputs": [
				{
					"internalType": "contract RigoTokenFace",
					"name": "grgContract",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getGrgVault",
			"outputs": [
				{
					"internalType": "contract IGrgVault",
					"name": "grgVault",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "staker",
					"type": "address"
				},
				{
					"internalType": "enum IStructs.StakeStatus",
					"name": "stakeStatus",
					"type": "uint8"
				}
			],
			"name": "getOwnerStakeByStatus",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint64",
							"name": "currentEpoch",
							"type": "uint64"
						},
						{
							"internalType": "uint96",
							"name": "currentEpochBalance",
							"type": "uint96"
						},
						{
							"internalType": "uint96",
							"name": "nextEpochBalance",
							"type": "uint96"
						}
					],
					"internalType": "struct IStructs.StoredBalance",
					"name": "balance",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getParams",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "_epochDurationInSeconds",
					"type": "uint256"
				},
				{
					"internalType": "uint32",
					"name": "_rewardDelegatedStakeWeight",
					"type": "uint32"
				},
				{
					"internalType": "uint256",
					"name": "_minimumPoolStake",
					"type": "uint256"
				},
				{
					"internalType": "uint32",
					"name": "_cobbDouglasAlphaNumerator",
					"type": "uint32"
				},
				{
					"internalType": "uint32",
					"name": "_cobbDouglasAlphaDenominator",
					"type": "uint32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "staker",
					"type": "address"
				},
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "getStakeDelegatedToPoolByOwner",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint64",
							"name": "currentEpoch",
							"type": "uint64"
						},
						{
							"internalType": "uint96",
							"name": "currentEpochBalance",
							"type": "uint96"
						},
						{
							"internalType": "uint96",
							"name": "nextEpochBalance",
							"type": "uint96"
						}
					],
					"internalType": "struct IStructs.StoredBalance",
					"name": "balance",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "getStakingPool",
			"outputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "operator",
							"type": "address"
						},
						{
							"internalType": "address",
							"name": "stakingPal",
							"type": "address"
						},
						{
							"internalType": "uint32",
							"name": "operatorShare",
							"type": "uint32"
						},
						{
							"internalType": "uint32",
							"name": "stakingPalShare",
							"type": "uint32"
						}
					],
					"internalType": "struct IStructs.Pool",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "getStakingPoolStatsThisEpoch",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "feesCollected",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "weightedStake",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "membersStake",
							"type": "uint256"
						}
					],
					"internalType": "struct IStructs.PoolStats",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "staker",
					"type": "address"
				}
			],
			"name": "getTotalStake",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "getTotalStakeDelegatedToPool",
			"outputs": [
				{
					"components": [
						{
							"internalType": "uint64",
							"name": "currentEpoch",
							"type": "uint64"
						},
						{
							"internalType": "uint96",
							"name": "currentEpochBalance",
							"type": "uint96"
						},
						{
							"internalType": "uint96",
							"name": "nextEpochBalance",
							"type": "uint96"
						}
					],
					"internalType": "struct IStructs.StoredBalance",
					"name": "balance",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "init",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "stakingPoolId",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "rigoblockPoolAccount",
					"type": "address"
				}
			],
			"name": "joinStakingPoolAsRbPoolAccount",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "enum IStructs.StakeStatus",
							"name": "status",
							"type": "uint8"
						},
						{
							"internalType": "bytes32",
							"name": "poolId",
							"type": "bytes32"
						}
					],
					"internalType": "struct IStructs.StakeInfo",
					"name": "from",
					"type": "tuple"
				},
				{
					"components": [
						{
							"internalType": "enum IStructs.StakeStatus",
							"name": "status",
							"type": "uint8"
						},
						{
							"internalType": "bytes32",
							"name": "poolId",
							"type": "bytes32"
						}
					],
					"internalType": "struct IStructs.StakeInfo",
					"name": "to",
					"type": "tuple"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "moveStake",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "addr",
					"type": "address"
				}
			],
			"name": "removePopAddress",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_epochDurationInSeconds",
					"type": "uint256"
				},
				{
					"internalType": "uint32",
					"name": "_rewardDelegatedStakeWeight",
					"type": "uint32"
				},
				{
					"internalType": "uint256",
					"name": "_minimumPoolStake",
					"type": "uint256"
				},
				{
					"internalType": "uint32",
					"name": "_cobbDouglasAlphaNumerator",
					"type": "uint32"
				},
				{
					"internalType": "uint32",
					"name": "_cobbDouglasAlphaDenominator",
					"type": "uint32"
				}
			],
			"name": "setParams",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "newStakingPalAddress",
					"type": "address"
				}
			],
			"name": "setStakingPalAddress",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "stake",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "unstake",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "poolId",
					"type": "bytes32"
				}
			],
			"name": "withdrawDelegatorRewards",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}