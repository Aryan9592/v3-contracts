{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "CatchStringEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "epoch",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "numPoolsToFinalize",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardsAvailable",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalFeesCollected",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalWeightedStake",
						"type": "uint256"
					}
				],
				"name": "EpochEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "epoch",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardsPaid",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rewardsRemaining",
						"type": "uint256"
					}
				],
				"name": "EpochFinalized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "grgAmount",
						"type": "uint256"
					}
				],
				"name": "GrgMintEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "fromStatus",
						"type": "uint8"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "fromPool",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "toStatus",
						"type": "uint8"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "toPool",
						"type": "bytes32"
					}
				],
				"name": "MoveStake",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "oldOperatorShare",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "newOperatorShare",
						"type": "uint32"
					}
				],
				"name": "OperatorShareDecreased",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "epochDurationInSeconds",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "rewardDelegatedStakeWeight",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minimumPoolStake",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cobbDouglasAlphaNumerator",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cobbDouglasAlphaDenominator",
						"type": "uint256"
					}
				],
				"name": "ParamsSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "exchangeAddress",
						"type": "address"
					}
				],
				"name": "PopAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "exchangeAddress",
						"type": "address"
					}
				],
				"name": "PopRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "rbPoolAddress",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"name": "RbPoolStakingPoolSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "reason",
						"type": "bytes"
					}
				],
				"name": "ReturnDataEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "epoch",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "operatorReward",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "membersReward",
						"type": "uint256"
					}
				],
				"name": "RewardsPaid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Stake",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "operatorShare",
						"type": "uint32"
					}
				],
				"name": "StakingPoolCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "epoch",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"name": "StakingPoolEarnedRewardsInEpoch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "staker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Unstake",
				"type": "event"
			}
		],
		"devdoc": {
			"events": {
				"CatchStringEvent(string)": {
					"details": "Emitted whenever an inflation mint call is reverted.",
					"params": {
						"reason": "String of the revert message."
					}
				},
				"EpochEnded(uint256,uint256,uint256,uint256,uint256)": {
					"details": "Emitted by MixinFinalizer when an epoch has ended.",
					"params": {
						"epoch": "The epoch that ended.",
						"numPoolsToFinalize": "Number of pools that earned rewards during `epoch` and must be finalized.",
						"rewardsAvailable": "Rewards available to all pools that earned rewards during `epoch`.",
						"totalFeesCollected": "Total fees collected across all pools that earned rewards during `epoch`.",
						"totalWeightedStake": "Total weighted stake across all pools that earned rewards during `epoch`."
					}
				},
				"EpochFinalized(uint256,uint256,uint256)": {
					"details": "Emitted by MixinFinalizer when an epoch is fully finalized.",
					"params": {
						"epoch": "The epoch being finalized.",
						"rewardsPaid": "Total amount of rewards paid out.",
						"rewardsRemaining": "Rewards left over."
					}
				},
				"GrgMintEvent(uint256)": {
					"details": "Emitted when an inflation mint call is executed successfully.",
					"params": {
						"grgAmount": "Amount of GRG tokens minted to the staking proxy."
					}
				},
				"MoveStake(address,uint256,uint8,bytes32,uint8,bytes32)": {
					"details": "Emitted by MixinStake when GRG is unstaked.",
					"params": {
						"amount": "of GRG unstaked.",
						"staker": "of GRG."
					}
				},
				"OperatorShareDecreased(bytes32,uint32,uint32)": {
					"details": "Emitted when a staking pool's operator share is decreased.",
					"params": {
						"newOperatorShare": "Newly decreased share of rewards owned by operator.",
						"oldOperatorShare": "Previous share of rewards owned by operator.",
						"poolId": "Unique Id of pool."
					}
				},
				"ParamsSet(uint256,uint32,uint256,uint256,uint256)": {
					"details": "Emitted whenever staking parameters are changed via the `setParams()` function.",
					"params": {
						"cobbDouglasAlphaDenominator": "Denominator for cobb douglas alpha factor.",
						"cobbDouglasAlphaNumerator": "Numerator for cobb douglas alpha factor.",
						"epochDurationInSeconds": "Minimum seconds between epochs.",
						"minimumPoolStake": "Minimum amount of stake required in a pool to collect rewards.",
						"rewardDelegatedStakeWeight": "How much delegated stake is weighted vs operator stake, in ppm."
					}
				},
				"PopAdded(address)": {
					"details": "Emitted by MixinExchangeManager when an exchange is added.",
					"params": {
						"exchangeAddress": "Address of new exchange."
					}
				},
				"PopRemoved(address)": {
					"details": "Emitted by MixinExchangeManager when an exchange is removed.",
					"params": {
						"exchangeAddress": "Address of removed exchange."
					}
				},
				"RbPoolStakingPoolSet(address,bytes32)": {
					"details": "Emitted by MixinStakingPool when a rigoblock pool is added to its staking pool.",
					"params": {
						"poolId": "Unique id of pool.",
						"rbPoolAddress": "Adress of maker added to pool."
					}
				},
				"ReturnDataEvent(bytes)": {
					"details": "Emitted to catch any other inflation mint call fail.",
					"params": {
						"reason": "Bytes output of the reverted transaction."
					}
				},
				"RewardsPaid(uint256,bytes32,uint256,uint256)": {
					"details": "Emitted by MixinFinalizer when rewards are paid out to a pool.",
					"params": {
						"epoch": "The epoch when the rewards were paid out.",
						"membersReward": "Amount of reward paid to pool members.",
						"operatorReward": "Amount of reward paid to pool operator.",
						"poolId": "The pool's ID."
					}
				},
				"Stake(address,uint256)": {
					"details": "Emitted by MixinStake when GRG is staked.",
					"params": {
						"amount": "of GRG staked.",
						"staker": "of GRG."
					}
				},
				"StakingPoolCreated(bytes32,address,uint32)": {
					"details": "Emitted by MixinStakingPool when a new pool is created.",
					"params": {
						"operator": "The operator (creator) of pool.",
						"operatorShare": "The share of rewards given to the operator, in ppm.",
						"poolId": "Unique id generated for pool."
					}
				},
				"StakingPoolEarnedRewardsInEpoch(uint256,bytes32)": {
					"details": "Emitted by MixinExchangeFees when a pool starts earning rewards in an epoch.",
					"params": {
						"epoch": "The epoch in which the pool earned rewards.",
						"poolId": "The ID of the pool."
					}
				},
				"Unstake(address,uint256)": {
					"details": "Emitted by MixinStake when GRG is unstaked.",
					"params": {
						"amount": "of GRG unstaked.",
						"staker": "of GRG."
					}
				}
			},
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/staking/interfaces/IStakingEvents.sol": "IStakingEvents"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/staking/interfaces/IStakingEvents.sol": {
			"keccak256": "0x61c3de91a1037a9e2321e553493aeadcc94e76c88725540977f5604b405d356d",
			"urls": [
				"bzz-raw://d5e81c51b3e0f49cc0257ed23ec162e2068d4adb4e3a93a11260fb5172fb2250",
				"dweb:/ipfs/QmZWnZay6LYmCtBMmYb7ZZYCnGMjDwBAee92h9Fwkb44hB"
			]
		}
	},
	"version": 1
}