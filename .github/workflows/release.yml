name: Release

on:
  workflow_dispatch:
      inputs:
#          ci_status:
#              description: 'required CI status'
#              default: 'success'
#              required: true
          default_bump:
            description: patch-minor-major
            default: patch
          prerelease:
            description: prerelease name
            required: false

jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@331898d5052eedac9b15fec867b5ba66ebf9b692
        with:
          github_token: ${{ secrets.PUBLISH_GITHUB_TOKEN }}
          release_branches: development
          default_bump: github.event.input.default_bump

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: bump_version
    if: ${{ needs.bump_version.outputs.new_tag != null }}
    steps:
#      - name: Check Successful Status
#        run: |
#          REF_STATUS=$(curl -s \
#          'https://api.github.com/repos/${{ github.repository }}/commits/${{ github.ref }}/status' \
#          | jq .state)
#          [[ "${REF_STATUS}" == '"${{ github.event.inputs.ci_status }}"' ]] || \
#          (echo "::error ::${{ github.ref }} does not have a successful CI status" && false)
#      - uses: actions/checkout@v2
#        with:
#          ref: ${{ github.ref }}
#          fetch-depth: 0
#
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Github Release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump_version.outputs.new_tag }}
          release_name: Release ${{ needs.bump_version.outputs.new_tag }}
          body: |
            ${{ needs.bump_version.outputs.changelog }}

      - name: Merge Into Main Branch'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          PUBLISH_PRERELEASE: ${{ github.event.inputs.prerelease }}
        if: github.event.inputs.prerelease == '' # unless it's a prerelease
        run: |
          git checkout main && \
          git merge ${{ github.ref }} && \
          git push
